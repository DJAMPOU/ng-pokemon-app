{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, of, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PokemonService {\n  constructor(http) {\n    this.http = http;\n  }\n  getPokemonList() {\n    //return POKEMONS;\n    return this.http.get('api/pokemons').pipe(tap(pokemonList => this.log(pokemonList)), catchError(error => this.handlerError(error, [])));\n  }\n  getPokemonById(pokemonId) {\n    return this.http.get(`api/pokemons/${pokemonId}`).pipe(tap(pokemon => this.log(pokemon)), catchError(error => this.handlerError(error, null)));\n  }\n  updatePokemon(pokemon) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'Application/json'\n      })\n    };\n    return this.http.put('api/pokemons', pokemon, httpOptions).pipe(tap(response => this.log(response)), catchError(error => this.handlerError(error, undefined)));\n  }\n  log(response) {\n    console.table(response);\n  }\n  handlerError(error, errorValue) {\n    console.error(error);\n    return of(errorValue);\n  }\n  getPokemonTypeList() {\n    return ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol', 'Combat', 'Psy'];\n  }\n}\nPokemonService.ɵfac = function PokemonService_Factory(t) {\n  return new (t || PokemonService)(i0.ɵɵinject(i1.HttpClient));\n};\nPokemonService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PokemonService,\n  factory: PokemonService.ɵfac\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,WAAW,QAAO,sBAAsB;AAC7D,SAAqBC,UAAU,EAAEC,EAAE,EAAEC,GAAG,QAAQ,MAAM;;;AAGtD,OAAM,MAAOC,cAAc;EAEzBC,YACUC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EACX;EAEHC,cAAc;IACZ;IACA,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,cAAc,CAAC,CAACC,IAAI,CAClDN,GAAG,CAAEO,WAAW,IAAK,IAAI,CAACC,GAAG,CAACD,WAAW,CAAC,CAAC,EAC3CT,UAAU,CAAEW,KAAK,IAAK,IAAI,CAACC,YAAY,CAACD,KAAK,EAAE,EAAE,CAAC,CAAE,CACrD;EACH;EAEAE,cAAc,CAACC,SAAiB;IAC9B,OAAO,IAAI,CAACT,IAAI,CAACE,GAAG,CAAU,gBAAgBO,SAAS,EAAE,CAAC,CAACN,IAAI,CAC7DN,GAAG,CAAEa,OAAO,IAAK,IAAI,CAACL,GAAG,CAACK,OAAO,CAAC,CAAC,EACnCf,UAAU,CAAEW,KAAK,IAAK,IAAI,CAACC,YAAY,CAACD,KAAK,EAAE,IAAI,CAAC,CAAC,CACtD;EACH;EAEAK,aAAa,CAACD,OAAiB;IAC7B,MAAME,WAAW,GAAG;MAClBC,OAAO,EAAG,IAAInB,WAAW,CAAC;QAAC,cAAc,EAAE;MAAkB,CAAC;KAC/D;IAED,OAAO,IAAI,CAACM,IAAI,CAACc,GAAG,CAAC,cAAc,EAAEJ,OAAO,EAAEE,WAAW,CAAC,CAACT,IAAI,CAC7DN,GAAG,CAAEkB,QAAQ,IAAK,IAAI,CAACV,GAAG,CAACU,QAAQ,CAAC,CAAC,EACrCpB,UAAU,CAAEW,KAAK,IAAK,IAAI,CAACC,YAAY,CAACD,KAAK,EAAEU,SAAS,CAAC,CAAC,CAC3D;EACH;EAEQX,GAAG,CAACU,QAAa;IACvBE,OAAO,CAACC,KAAK,CAACH,QAAQ,CAAC;EACzB;EAEQR,YAAY,CAACD,KAAY,EAAEa,UAAe;IAChDF,OAAO,CAACX,KAAK,CAACA,KAAK,CAAC;IACpB,OAAOV,EAAE,CAACuB,UAAU,CAAC;EACvB;EAEAC,kBAAkB;IAChB,OAAO,CACL,QAAQ,EACR,KAAK,EACL,KAAK,EACL,SAAS,EACT,QAAQ,EACR,UAAU,EACV,QAAQ,EACR,KAAK,EACL,KAAK,EACL,QAAQ,EACR,KAAK,CACN;EACH;;AAvDWtB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAuB,SAAdvB,cAAc;AAAA","names":["HttpHeaders","catchError","of","tap","PokemonService","constructor","http","getPokemonList","get","pipe","pokemonList","log","error","handlerError","getPokemonById","pokemonId","pokemon","updatePokemon","httpOptions","headers","put","response","undefined","console","table","errorValue","getPokemonTypeList","factory"],"sourceRoot":"","sources":["C:\\Users\\pierr\\ng-pokemon-app\\src\\app\\pokemon\\pokemon.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Pokemon } from './pokemon';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable, catchError, of, tap } from 'rxjs';\n\n@Injectable()\nexport class PokemonService {\n\n  constructor(\n    private http :HttpClient,\n  ) {}\n\n  getPokemonList(): Observable<Pokemon[]> {\n    //return POKEMONS;\n    return this.http.get<Pokemon[]>('api/pokemons').pipe(\n      tap((pokemonList) => this.log(pokemonList)),\n      catchError((error) => this.handlerError(error, []) )\n    )\n  }\n\n  getPokemonById(pokemonId: number): Observable<null> {\n    return this.http.get<Pokemon>(`api/pokemons/${pokemonId}`).pipe(\n      tap((pokemon) => this.log(pokemon)),\n      catchError((error) => this.handlerError(error, null))\n    );\n  }\n\n  updatePokemon(pokemon : Pokemon) : Observable<Pokemon | undefined>{\n    const httpOptions = {\n      headers : new HttpHeaders({'Content-Type': 'Application/json'})\n    };\n\n    return this.http.put('api/pokemons', pokemon, httpOptions).pipe(\n      tap((response) => this.log(response)),\n      catchError((error) => this.handlerError(error, undefined))\n    )\n  }\n\n  private log(response: any){\n    console.table(response);\n  }\n\n  private handlerError(error: Error, errorValue: any){\n    console.error(error);\n    return of(errorValue);\n  }\n\n  getPokemonTypeList(): string[] {\n    return [\n      'Plante', \n      'Feu', \n      'Eau', \n      'Insecte',\n      'Normal',\n      'Electrik', \n      'Poison', \n      'Fée',\n      'Vol',\n      'Combat',\n      'Psy'\n    ];\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}