{"ast":null,"code":"import { POKEMONS } from './mock-pokemon-list';\nimport * as i0 from \"@angular/core\";\nexport class PokemonService {\n  constructor() {}\n  getPokemonList() {\n    return POKEMONS;\n  }\n  getPokemonById(pokemonId) {\n    return POKEMONS.find(pokemon => pokemon.id == pokemonId);\n  }\n  getPokemonTypeList() {\n    return ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol', 'Combat', 'Psy'];\n  }\n}\nPokemonService.ɵfac = function PokemonService_Factory(t) {\n  return new (t || PokemonService)();\n};\nPokemonService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PokemonService,\n  factory: PokemonService.ɵfac\n});","map":{"version":3,"mappings":"AAEA,SAASA,QAAQ,QAAQ,qBAAqB;;AAG9C,OAAM,MAAOC,cAAc;EAEzBC,eAAe;EAEfC,cAAc;IACZ,OAAOH,QAAQ;EACjB;EAEAI,cAAc,CAACC,SAAiB;IAC9B,OAAOL,QAAQ,CAACM,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,EAAE,IAAIH,SAAS,CAAC;EAC1D;EAEAI,kBAAkB;IAChB,OAAO,CACL,QAAQ,EACR,KAAK,EACL,KAAK,EACL,SAAS,EACT,QAAQ,EACR,UAAU,EACV,QAAQ,EACR,KAAK,EACL,KAAK,EACL,QAAQ,EACR,KAAK,CACN;EACH;;AA1BWR,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAS,SAAdT,cAAc;AAAA","names":["POKEMONS","PokemonService","constructor","getPokemonList","getPokemonById","pokemonId","find","pokemon","id","getPokemonTypeList","factory"],"sourceRoot":"","sources":["C:\\Users\\pierr\\ng-pokemon-app\\src\\app\\pokemon\\pokemon.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Pokemon } from './pokemon';\nimport { POKEMONS } from './mock-pokemon-list';\n\n@Injectable()\nexport class PokemonService {\n\n  constructor() {}\n\n  getPokemonList(): Pokemon[] {\n    return POKEMONS;\n  }\n\n  getPokemonById(pokemonId: number): Pokemon|undefined {\n    return POKEMONS.find(pokemon => pokemon.id == pokemonId);\n  }\n\n  getPokemonTypeList(): string[] {\n    return [\n      'Plante', \n      'Feu', \n      'Eau', \n      'Insecte',\n      'Normal',\n      'Electrik', \n      'Poison', \n      'Fée',\n      'Vol',\n      'Combat',\n      'Psy'\n    ];\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}