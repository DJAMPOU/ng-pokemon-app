{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../pokemon.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../pokemon-type-color.pipe\";\nfunction PokemonFormComponent_form_0_p_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p\")(1, \"label\")(2, \"input\", 22);\n    i0.ɵɵlistener(\"change\", function PokemonFormComponent_form_0_p_29_Template_input_change_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const type_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.selectType($event, type_r6));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\")(4, \"div\");\n    i0.ɵɵpipe(5, \"pokemonTypeColor\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const type_r6 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"id\", type_r6);\n    i0.ɵɵproperty(\"value\", type_r6)(\"checked\", ctx_r5.hasType(type_r6))(\"disabled\", !ctx_r5.isTypesValid(type_r6));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"for\", type_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(i0.ɵɵpipeBind1(5, 9, type_r6));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", type_r6, \" \");\n  }\n}\nfunction PokemonFormComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 1, 2);\n    i0.ɵɵlistener(\"ngSubmit\", function PokemonFormComponent_form_0_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onSubmit());\n    });\n    i0.ɵɵelementStart(2, \"div\", 3)(3, \"div\", 4)(4, \"div\", 5)(5, \"div\", 6)(6, \"label\", 7);\n    i0.ɵɵtext(7, \"Nom\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 8, 9);\n    i0.ɵɵlistener(\"ngModelChange\", function PokemonFormComponent_form_0_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.pokemon.name = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 10);\n    i0.ɵɵtext(11, \" Le nom du pok\\u00E9mon est requis (1-25). \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 6)(13, \"label\", 11);\n    i0.ɵɵtext(14, \"Point de vie\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"input\", 12, 13);\n    i0.ɵɵlistener(\"ngModelChange\", function PokemonFormComponent_form_0_Template_input_ngModelChange_15_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.pokemon.hp = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 10);\n    i0.ɵɵtext(18, \" Les points de vie du pok\\u00E9mon sont compris entre 0 et 999. \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"div\", 6)(20, \"label\", 14);\n    i0.ɵɵtext(21, \"D\\u00E9g\\u00E2ts\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"input\", 15, 16);\n    i0.ɵɵlistener(\"ngModelChange\", function PokemonFormComponent_form_0_Template_input_ngModelChange_22_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.pokemon.cp = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"div\", 10);\n    i0.ɵɵtext(25, \" Les d\\u00E9g\\u00E2ts du pok\\u00E9mon sont compris entre 0 et 99. \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"form\", 6)(27, \"label\", 17);\n    i0.ɵɵtext(28, \"Types\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(29, PokemonFormComponent_form_0_p_29_Template, 7, 11, \"p\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(30, \"div\", 19);\n    i0.ɵɵelementStart(31, \"div\", 20)(32, \"button\", 21);\n    i0.ɵɵtext(33, \" Valider\");\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const _r1 = i0.ɵɵreference(1);\n    const _r2 = i0.ɵɵreference(9);\n    const _r3 = i0.ɵɵreference(16);\n    const _r4 = i0.ɵɵreference(23);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.pokemon.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", _r2.valid || _r2.pristine);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.pokemon.hp);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", _r3.valid || _r3.pristine);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.pokemon.cp);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", _r4.valid || _r4.pristine);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.types);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !_r1.form.valid);\n  }\n}\nexport class PokemonFormComponent {\n  constructor(pokemonService, router) {\n    this.pokemonService = pokemonService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.types = this.pokemonService.getPokemonTypeList();\n  }\n  hasType(type) {\n    return this.pokemon.types.includes(type);\n  }\n  selectType($event, type) {\n    const isChecked = $event.target.checked;\n    if (isChecked) {\n      this.pokemon.types.push(type);\n    } else {\n      const index = this.pokemon.types.indexOf(type);\n      this.pokemon.types.splice(index, 1);\n    }\n  }\n  isTypesValid(type) {\n    if (this.pokemon.types.length == 1 && this.hasType(type)) {\n      return false;\n    }\n    if (this.pokemon.types.length > 2 && !this.hasType(type)) {\n      return false;\n    }\n    return true;\n  }\n  onSubmit() {\n    console.log('Sunmit form !');\n    this.pokemonService.updatePokemon(this.pokemon).subscribe(() => this.router.navigate(['/pokemon', this.pokemon.id]));\n  }\n}\nPokemonFormComponent.ɵfac = function PokemonFormComponent_Factory(t) {\n  return new (t || PokemonFormComponent)(i0.ɵɵdirectiveInject(i1.PokemonService), i0.ɵɵdirectiveInject(i2.Router));\n};\nPokemonFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PokemonFormComponent,\n  selectors: [[\"app-pokemon-form\"]],\n  inputs: {\n    pokemon: \"pokemon\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"ngSubmit\", 4, \"ngIf\"], [3, \"ngSubmit\"], [\"pokemonForm\", \"ngForm\"], [1, \"row\"], [1, \"col\", \"s8\", \"offset-s2\"], [1, \"card-panel\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"required\", \"\", \"pattern\", \"^[a-zA-Z0-9\\u00E0\\u00E9\\u00E8\\u00E7]{1,25}$\", \"name\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"ngModel\"], [1, \"card-panel\", \"red\", \"accent-1\", 3, \"hidden\"], [\"for\", \"hp\"], [\"type\", \"number\", \"id\", \"hp\", \"required\", \"\", \"pattern\", \"^[0-9]{1,3}$\", \"name\", \"hp\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"hp\", \"ngModel\"], [\"for\", \"cp\"], [\"type\", \"number\", \"id\", \"cp\", \"required\", \"\", \"pattern\", \"^[0-9]{1,2}$\", \"name\", \"cp\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"cp\", \"ngModel\"], [\"for\", \"types\"], [4, \"ngFor\", \"ngForOf\"], [1, \"divider\"], [1, \"section\", \"center\"], [\"type\", \"submit\", 1, \"waves-effect\", \"waves-light\", \"btn\", 3, \"disabled\"], [\"type\", \"checkbox\", 1, \"filled-in\", 3, \"id\", \"value\", \"checked\", \"disabled\", \"change\"]],\n  template: function PokemonFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, PokemonFormComponent_form_0_Template, 34, 8, \"form\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.pokemon);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.PatternValidator, i4.NgModel, i4.NgForm, i5.PokemonTypeColorPipe],\n  styles: [\".ng-valid[required][_ngcontent-%COMP%] {\\n    border-left: 5px solid #42A948;\\n}\\n\\n.ng-invalid[_ngcontent-%COMP%]:not(form) {\\n    border-left: 5px solid #A94442;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcG9rZW1vbi9wb2tlbW9uLWZvcm0vcG9rZW1vbi1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw4QkFBOEI7QUFDbEM7O0FBRUE7SUFDSSw4QkFBOEI7QUFDbEMiLCJzb3VyY2VzQ29udGVudCI6WyIubmctdmFsaWRbcmVxdWlyZWRdIHtcbiAgICBib3JkZXItbGVmdDogNXB4IHNvbGlkICM0MkE5NDg7XG59XG5cbi5uZy1pbnZhbGlkOm5vdChmb3JtKSB7XG4gICAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjQTk0NDQyO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","PokemonFormComponent","constructor","pokemonService","router","ngOnInit","types","getPokemonTypeList","hasType","type","pokemon","includes","selectType","$event","isChecked","target","checked","push","index","indexOf","splice","isTypesValid","length","onSubmit","console","log","updatePokemon","subscribe","navigate","id","selectors","inputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\pierr\\ng-pokemon-app\\src\\app\\pokemon\\pokemon-form\\pokemon-form.component.html","C:\\Users\\pierr\\ng-pokemon-app\\src\\app\\pokemon\\pokemon-form\\pokemon-form.component.ts"],"sourcesContent":["<form *ngIf=\"pokemon\" (ngSubmit)=\"onSubmit()\" #pokemonForm=\"ngForm\">\n    <div class=\"row\">\n      <div class=\"col s8 offset-s2\">\n        <div class=\"card-panel\">\n    \n          <!-- Pokemon name -->\n          <div class=\"form-group\">\n            <label for=\"name\">Nom</label>\n            <input type=\"text\" class=\"form-control\" id=\"name\"\n                    required\n                    pattern=\"^[a-zA-Z0-9àéèç]{1,25}$\"\n                   [(ngModel)]=\"pokemon.name\" name=\"name\"\n                   #name=\"ngModel\">\n    \n            <div [hidden]=\"name.valid || name.pristine\"\n                  class=\"card-panel red accent-1\">\n                  Le nom du pokémon est requis (1-25).\n            </div>\n          </div>\n    \n          <!-- Pokemon hp -->\n          <div class=\"form-group\">\n            <label for=\"hp\">Point de vie</label>\n            <input type=\"number\" class=\"form-control\" id=\"hp\"\n                    required\n                    pattern=\"^[0-9]{1,3}$\"\n                   [(ngModel)]=\"pokemon.hp\" name=\"hp\"\n                   #hp=\"ngModel\">\n             <div [hidden]=\"hp.valid || hp.pristine\"\n                   class=\"card-panel red accent-1\">\n                   Les points de vie du pokémon sont compris entre 0 et 999.\n             </div>\n          </div>\n    \n          <!-- Pokemon cp -->\n          <div class=\"form-group\">\n            <label for=\"cp\">Dégâts</label>\n            <input type=\"number\" class=\"form-control\" id=\"cp\"\n                    required\n                    pattern=\"^[0-9]{1,2}$\"\n                   [(ngModel)]=\"pokemon.cp\" name=\"cp\"\n                   #cp=\"ngModel\">\n             <div [hidden]=\"cp.valid || cp.pristine\"\n                   class=\"card-panel red accent-1\">\n                   Les dégâts du pokémon sont compris entre 0 et 99.\n             </div>\n          </div>\n    \n          <!-- Pokemon types -->\n          <form class=\"form-group\">\n            <label for=\"types\">Types</label>\n            <p *ngFor=\"let type of types\">\n              <label>\n                <input type=\"checkbox\"\n                  class=\"filled-in\"\n                  id=\"{{ type }}\"\n                  [value]=\"type\"\n                  [checked]=\"hasType(type)\"\n                  [disabled]=\"!isTypesValid(type)\"\n                  (change)=\"selectType($event, type)\"/>\n                <span [attr.for]=\"type\">\n                  <div class=\"{{ type | pokemonTypeColor }}\">\n                    {{ type }}\n                  </div>\n                </span>\n              </label>\n            </p>\n          </form>\n    \n          <!-- Submit button -->\n          <div class=\"divider\"></div>\n          <div class=\"section center\">\n            <button type=\"submit\"\n              class=\"waves-effect waves-light btn\"\n              [disabled]=\"!pokemonForm.form.valid\">\n              Valider</button>\n          </div>\n    \n        </div>\n      </div>\n    </div>\n  </form>","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Pokemon } from '../pokemon';\nimport { PokemonService } from '../pokemon.service';\n\n@Component({\n  selector: 'app-pokemon-form',\n  templateUrl: './pokemon-form.component.html',\n  styleUrls: ['./pokemon-form.component.css']\n})\nexport class PokemonFormComponent implements OnInit {\n  @Input() pokemon: Pokemon;\n  types: string[];\n\n  constructor(\n    private pokemonService: PokemonService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.types = this.pokemonService.getPokemonTypeList();\n  }\n\n  hasType(type: string): boolean {\n    return this.pokemon.types.includes(type);\n  }\n\n  selectType($event: Event, type: string) {\n    const isChecked: boolean = ($event.target as HTMLInputElement).checked;\n\n    if(isChecked) {\n      this.pokemon.types.push(type);\n    } else {\n      const index = this.pokemon.types.indexOf(type);\n      this.pokemon.types.splice(index, 1);\n    }\n  }\n\n  isTypesValid(type: string): boolean {\n    if(this.pokemon.types.length == 1 && this.hasType(type)) {\n      return false;\n    }\n\n    if(this.pokemon.types.length > 2 && !this.hasType(type)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  onSubmit() {\n    console.log('Sunmit form !');\n    this.pokemonService.updatePokemon(this.pokemon)\n      .subscribe(() => this.router.navigate(['/pokemon', this.pokemon.id]));\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}