{"ast":null,"code":"import { catchError, of, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PokemonService {\n  constructor(http) {\n    this.http = http;\n  }\n  getPokemonList() {\n    //return POKEMONS;\n    return this.http.get('api/pokemons').pipe(tap(pokemonList => console.table(pokemonList)), catchError(error => {\n      console.log(error);\n      return of([]);\n    }));\n  }\n  getPokemonById(pokemonId) {\n    return this.http.get(`api/pokemons/${pokemonId}`).pipe(tap(pokemon => console.table(pokemon)), catchError(error => {\n      console.log(error);\n      return of(undefined);\n    }));\n  }\n  log(response) {\n    console.table(response);\n  }\n  getPokemonTypeList() {\n    return ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol', 'Combat', 'Psy'];\n  }\n}\nPokemonService.ɵfac = function PokemonService_Factory(t) {\n  return new (t || PokemonService)(i0.ɵɵinject(i1.HttpClient));\n};\nPokemonService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PokemonService,\n  factory: PokemonService.ɵfac\n});","map":{"version":3,"mappings":"AAGA,SAAqBA,UAAU,EAAEC,EAAE,EAAEC,GAAG,QAAQ,MAAM;;;AAGtD,OAAM,MAAOC,cAAc;EAEzBC,YACUC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EACX;EAEHC,cAAc;IACZ;IACA,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,cAAc,CAAC,CAACC,IAAI,CAClDN,GAAG,CAAEO,WAAW,IAAKC,OAAO,CAACC,KAAK,CAACF,WAAW,CAAC,CAAC,EAChDT,UAAU,CAAEY,KAAK,IAAI;MACnBF,OAAO,CAACG,GAAG,CAACD,KAAK,CAAC;MAClB,OAAOX,EAAE,CAAC,EAAE,CAAC;IACf,CAAC,CAAC,CACH;EACH;EAEAa,cAAc,CAACC,SAAiB;IAC9B,OAAO,IAAI,CAACV,IAAI,CAACE,GAAG,CAAU,gBAAgBQ,SAAS,EAAE,CAAC,CAACP,IAAI,CAC7DN,GAAG,CAAEc,OAAO,IAAKN,OAAO,CAACC,KAAK,CAACK,OAAO,CAAC,CAAC,EACxChB,UAAU,CAAEY,KAAK,IAAI;MACnBF,OAAO,CAACG,GAAG,CAACD,KAAK,CAAC;MAClB,OAAOX,EAAE,CAACgB,SAAS,CAAC;IACtB,CAAC,CAAC,CACH;EACH;EAEQJ,GAAG,CAACK,QAA0C;IACpDR,OAAO,CAACC,KAAK,CAACO,QAAQ,CAAC;EACzB;EAEAC,kBAAkB;IAChB,OAAO,CACL,QAAQ,EACR,KAAK,EACL,KAAK,EACL,SAAS,EACT,QAAQ,EACR,UAAU,EACV,QAAQ,EACR,KAAK,EACL,KAAK,EACL,QAAQ,EACR,KAAK,CACN;EACH;;AA7CWhB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAiB,SAAdjB,cAAc;AAAA","names":["catchError","of","tap","PokemonService","constructor","http","getPokemonList","get","pipe","pokemonList","console","table","error","log","getPokemonById","pokemonId","pokemon","undefined","response","getPokemonTypeList","factory"],"sourceRoot":"","sources":["C:\\Users\\pierr\\ng-pokemon-app\\src\\app\\pokemon\\pokemon.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Pokemon } from './pokemon';\nimport { HttpClient} from '@angular/common/http';\nimport { Observable, catchError, of, tap } from 'rxjs';\n\n@Injectable()\nexport class PokemonService {\n\n  constructor(\n    private http :HttpClient,\n  ) {}\n\n  getPokemonList(): Observable<Pokemon[]> {\n    //return POKEMONS;\n    return this.http.get<Pokemon[]>('api/pokemons').pipe(\n      tap((pokemonList) => console.table(pokemonList)),\n      catchError((error) =>{\n        console.log(error);\n        return of([]);\n      })\n    )\n  }\n\n  getPokemonById(pokemonId: number): Observable<Pokemon|undefined> {\n    return this.http.get<Pokemon>(`api/pokemons/${pokemonId}`).pipe(\n      tap((pokemon) => console.table(pokemon)),\n      catchError((error) =>{\n        console.log(error);\n        return of(undefined);\n      })\n    );\n  }\n\n  private log(response: Pokemon[] | Pokemon |  undefined){\n    console.table(response);\n  }\n\n  getPokemonTypeList(): string[] {\n    return [\n      'Plante', \n      'Feu', \n      'Eau', \n      'Insecte',\n      'Normal',\n      'Electrik', \n      'Poison', \n      'Fée',\n      'Vol',\n      'Combat',\n      'Psy'\n    ];\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}